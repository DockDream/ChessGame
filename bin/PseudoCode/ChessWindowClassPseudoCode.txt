ChessWindowClassPseudoCode

main()

	Create new instance of ChessWindowClass

ChessWindowClass()

	initialize()

		Create JFrame with 8x8 grid layout of JButtons

		for(i)
			for(ii)
				loop through 8x8 setting square color icon on JButtons
				Add action listener to JButtons

		Set menu items
		
	setPieces()

		Check pieceColor boolean for selected piece colors
		
		for(i)
			for(ii)
				if(i = 0)
					switch(ii)
						set back row black
				if(i = 1)
					if-else
						set black pawns on alternating square colors
				if(i = 6)
					if-else
						set white pawns on alternating square colors
				if(i = 7)
					switch(ii)
						set back row white

	movePiece()

		Check starting square color and set to empty square with proper color

		Use String and String Builder to take local machine relative path and parse out
		  piece and square color info. Check second click for square color of destination
                  use String and String Builder to construct proper image icon file name for destination.
		  Set destination square and piece icon.

	highlightMoves()

		Takes ArrayList of possible moves from backend. Uses String and String Builder to parse
		  image icon names and resets squares to the proper image with highlighting.

	clearHighlight()

		Uses the same method structure as highlightMoves() but uses a different sub string to reset
 		  square to their non-highlighted icon.

	actionPerformed()

		if(count = 0)	// First Click
			for(i)
				for(ii)
					if(pick = chessSqaures[i][ii])
						store square coordinates
					if(first click)
						call highlightMoves()
					else
						still need first click
		else		// Second Click
			for(i)
				for(ii)
					if(pick = chessSqaures[i][ii])
						store square coordinates
					if(second click)
						call clearHighlight()
						call movePiece()
					else
						call clearHighlight()	
						
						
	changeColor()
	
		if(pieceColor)
			toggle pieceColor
			if-else statements
				check piece type and square color - replace with same piece of alternate color and proper square color.
				
	pawnPromotionMove()
	
		display JOptionPane with drop down for new piece choice {Queen, Bishop, Rook, Knight}
		String selection = player's choice
		if-else
			check piece color and square color for appropriate new piece and square attributes.
			
		initialize new instance of proper piece class and set piece.
		
	kingCastle()
	
		if-else
			determine piece color and castling direction.
			set King and Rook in appropriate positions.		
			
		